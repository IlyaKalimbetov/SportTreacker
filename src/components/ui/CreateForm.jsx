import axios from 'axios';
import React, { useEffect, useRef, useState } from 'react';
import "..";

function CreateForm({ setPosts }) {

    const formRef = useRef(null);

    const submitHandler = async (e) => {
        e.preventDefault();
        const { data } = await axios.post('/api/main/post', Object.fromEntries(new FormData(e.target)));
        setPosts((prev) => [...prev, data]);
        formRef.current.reset(); // Reset the form using the ref
    };

    const [selectedSmiley, setSelectedSmiley] = useState(null);
    const [selectedGender, setSelectedGender] = useState(null);

    const handleSmileyClick = (index) => {
        setSelectedSmiley(index === selectedSmiley ? null : index);
    };

    const handleGenderClick = (index) => {
        setSelectedGender(index === selectedGender ? null : index);
    };

    const smileys = ['üò¥', 'üòÄ', 'üò±'];
    const gender = ['–º', '–∂'];
    const sports = [
        '–•–æ–¥—å–±–∞',
        '–ë–µ–≥',
        '–ü–æ–¥—ä–µ–º –ø–æ –ª–µ—Å—Ç–Ω–∏—Ü–µ',
        '–§—É—Ç–±–æ–ª',
        '–ë–∞—Å–∫–µ—Ç–±–æ–ª',
        '–í–æ–ª–µ–π–±–æ–ª',
        '–¢–µ–Ω–Ω–∏—Å',
        '–ì–∞–Ω–¥–±–æ–ª',
        '–•–æ–∫–∫–µ–π',
        '–ë–µ–π—Å–±–æ–ª',
        '–†–µ–≥–±–∏',
        '–ö—Ä–∏–∫–µ—Ç',
        '–ì–æ–ª—å—Ñ',
        '–ë–æ–∫—Å',
        '–î–∑—é–¥–æ',
        '–ö–∞—Ä–∞—Ç–µ',
        '–¢—Ö—ç–∫–≤–æ–Ω–¥–æ',
        '–í–µ–ª–æ—Å–ø–æ—Ä—Ç',
        '–õ—ã–∂–∏',
        '–°–Ω–æ—É–±–æ—Ä–¥',
        '–§–∏–≥—É—Ä–Ω–æ–µ –∫–∞—Ç–∞–Ω–∏–µ',
        '–ü–ª–∞–≤–∞–Ω–∏–µ',
        '–í–æ–¥–Ω–æ–µ –ø–æ–ª–æ',
        '–°–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ –ø–ª–∞–≤–∞–Ω–∏–µ',
        '–ü—Ä—ã–∂–∫–∏ –≤ –≤–æ–¥—É',
        '–ì–∏–º–Ω–∞—Å—Ç–∏–∫–∞',
        '–õ–µ–≥–∫–∞—è –∞—Ç–ª–µ—Ç–∏–∫–∞',
        '–ü–∞—Ä—É—Å–Ω—ã–π —Å–ø–æ—Ä—Ç',
        '–ê–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∞—è –≥—Ä–µ–±–ª—è',
        '–í–µ—Å–ª–µ–≤–æ–π —Å–ø–æ—Ä—Ç',
        '–ö–æ–Ω–Ω—ã–π —Å–ø–æ—Ä—Ç',
        '–°–∫–∞–ª–æ–ª–∞–∑–∞–Ω–∏–µ',
        '–°–∫–µ–π—Ç–±–æ—Ä–¥–∏–Ω–≥',
        '–°–µ—Ä—Ñ–∏–Ω–≥',
        '–ü–∞—Ä–∞–ª–∏–º–ø–∏–π—Å–∫–∏–µ –≤–∏–¥—ã —Å–ø–æ—Ä—Ç–∞'
    ];
    useEffect(() => {
        setSelectedGender(null);
        setSelectedSmiley(null);
      }, [setPosts]);
    return (
        <form
            ref={formRef}
            onSubmit={submitHandler}
            style={{
                display: 'flex',
                flexDirection: 'column',
                gap: '20px',
                alignItems: 'center',
                justifyContent: 'center',
                marginTop: '70px',
            }}>
            <div className="mb-3">
                <label className="form-label"
                    style={{
                        fontSize: '18px', alignItems: 'center', justifyContent: 'center', display: 'flex', flexDirection: 'column', marginTop: '10px'
                    }}>
                    <h1>–ú–æ—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</h1>
                </label>
                <div style={{ display: 'flex', flexDirection: 'column', gap: '20px' }}>

                    <div>
                        <p>–ù–∞–∑–≤–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</p>
                        <select style={{ width: '500px', marginTop: '-10px' }} type="text" name="name" className="form-control">
                            <option>–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥ —Å–ø–æ—Ä—Ç–∞</option>
                            {sports.map((sport, index) => (
                                <option key={index} value={sport}>{sport}</option>
                            ))}
                        </select>
                    </div>
                    <div style={{ display: 'flex', gap: '40px' }}>
                        <div>
                            <p>–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</p>
                            <input style={{ width: '80px', marginTop: '-10px', }} type="number" name="time" className="form-control" />
                        </div>
                        <div style={{ width: '100px' }}>
                            <p style={{ textAlign: 'center' }}>–ü–æ–ª</p>
                            <input type="hidden" name="sex" value={ selectedGender !== null ? gender[selectedGender] : ''} />

                            <div style={{ display: 'flex', justifyContent: 'center', gap: '40px', marginTop: '-10px' }} type="text" name="sex" >
                                {gender.map((sex, index) => (
                                    <p
                                        key={index}
                                        style={{
                                            fontSize: '24px',
                                            width: '25px',
                                            textAlign: 'center',
                                            backgroundColor: selectedGender === index ? '#0b2d50' : 'transparent',
                                            color: selectedGender === index ? 'white' : '#212529',
                                        }}
                                        onClick={() => handleGenderClick(index)}
                                    >
                                        {sex}
                                    </p>
                                ))}
                            </div>
                        </div>
                        <div>
                            <p style={{ textAlign: 'center' }}>–†–æ—Å—Ç</p>
                            <input style={{ width: '80px', marginTop: '-10px', }} type="number" name="height" className="form-control" />
                        </div>
                        <div>
                            <p style={{ textAlign: 'center' }}>–í–µ—Å</p>
                            <input style={{ width: '80px', marginTop: '-10px', }} type="number" name="weight" className="form-control" />
                        </div>
                    </div>
                    <div>
                        <p style={{ textAlign: 'center' }}>–ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å</p>
                        <input type="hidden" name="intensive" value={selectedSmiley !== null ? smileys[selectedSmiley] : ''} />

                        <div style={{ display: 'flex', justifyContent: 'center', gap: '40px' }} type="text" name="intensive" >
                            {smileys.map((smiley, index) => (
                                <p
                                    key={index}
                                    style={{
                                        fontSize: '24px',
                                        backgroundColor: selectedSmiley === index ?  '#0b2d50' : 'transparent',
                                    }}
                                    onClick={() => handleSmileyClick(index)}
                                >
                                    {smiley}
                                </p>
                            ))}
                        </div>
                    </div>
                    <div>
                        <p>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</p>
                        <input style={{ width: '500px', marginTop: '-10px', }} type="text" name="desc" className="form-control" />
                    </div>

                </div>
            </div>
            <button type="submit" className="btn primary" style={{ backgroundColor: '#0b2d50', color: 'white', marginTop: '10px' }}>–î–æ–±–∞–≤–∏—Ç—å</button>
        </form>
    );
}

export default CreateForm;
